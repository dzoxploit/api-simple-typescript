import { BasicAsyncEnumerable } from "./BasicAsyncEnumerable.js";
export const isAsyncEnumerable = (source) => {
    if (!source) {
        return false;
    }
    if (source instanceof BasicAsyncEnumerable) {
        return true;
    }
    if (typeof source[Symbol.asyncIterator] !== "function") {
        return false;
    }
    const propertyNames = Object.getOwnPropertyNames(BasicAsyncEnumerable.prototype)
        .filter((v) => v !== "constructor");
    const methods = source.prototype || source;
    for (const prop of propertyNames) {
        if (typeof methods[prop] !== "function") {
            return false;
        }
    }
    return true;
};
