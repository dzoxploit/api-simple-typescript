import { BasicAsyncEnumerable } from "../BasicAsyncEnumerable.js";
export const distinctAsync = (source, comparer) => {
    async function* iterator() {
        const distinctElements = [];
        outerLoop: for await (const item of source) {
            for (const distinctElement of distinctElements) {
                const found = await comparer(distinctElement, item);
                if (found) {
                    continue outerLoop;
                }
            }
            distinctElements.push(item);
            yield item;
        }
    }
    return new BasicAsyncEnumerable(iterator);
};
