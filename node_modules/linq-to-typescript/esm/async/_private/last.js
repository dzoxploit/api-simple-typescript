import { ErrorString, InvalidOperationException } from "../../shared/index.js";
export const last = (source, predicate) => {
    if (predicate) {
        return last2(source, predicate);
    }
    else {
        return last1(source);
    }
};
const last1 = async (source) => {
    let lastItem = null;
    for await (const value of source) {
        lastItem = value;
    }
    if (!lastItem) {
        throw new InvalidOperationException(ErrorString.NoElements);
    }
    return lastItem;
};
const last2 = async (source, predicate) => {
    let lastItem = null;
    for await (const value of source) {
        if (predicate(value) === true) {
            lastItem = value;
        }
    }
    if (!lastItem) {
        throw new InvalidOperationException(ErrorString.NoMatch);
    }
    return lastItem;
};
