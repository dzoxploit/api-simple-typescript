import { BasicAsyncEnumerable } from "../BasicAsyncEnumerable.js";
export const flattenAsync = (source, shallow) => {
    async function* iterator(sourceInner) {
        for await (const item of sourceInner) {
            if (item[Symbol.asyncIterator] !== undefined) {
                const items = shallow ? item : iterator(item);
                for await (const inner of items) {
                    yield inner;
                }
            }
            else {
                yield item;
            }
        }
    }
    return new BasicAsyncEnumerable(() => iterator(source));
};
