import { ErrorString, InvalidOperationException } from "../../shared/index.js";
export const first = (source, predicate) => {
    if (predicate) {
        return first2(source, predicate);
    }
    else {
        return first1(source);
    }
};
const first1 = (source) => {
    const first = source[Symbol.iterator]().next();
    if (first.done === true) {
        throw new InvalidOperationException(ErrorString.NoElements);
    }
    return first.value;
};
const first2 = (source, predicate) => {
    for (const value of source) {
        if (predicate(value) === true) {
            return value;
        }
    }
    throw new InvalidOperationException(ErrorString.NoMatch);
};
