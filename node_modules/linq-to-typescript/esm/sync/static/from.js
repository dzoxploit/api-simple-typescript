import { BasicEnumerable } from "../BasicEnumerable.js";
export const from = (source) => {
    const isArrayLike = (x) => {
        return Array.isArray(x) || (typeof x === "object" && typeof x.length === "number" && (x.length === 0 || 0 in x));
    };
    const isIterableType = (x) => typeof x === "function";
    if (isArrayLike(source)) {
        const generator = function* () {
            for (let i = 0; i < source.length; i++) {
                yield source[i];
            }
        };
        return new BasicEnumerable(generator);
    }
    if (isIterableType(source)) {
        return new BasicEnumerable(source);
    }
    return new BasicEnumerable(function* () {
        for (const val of source) {
            yield val;
        }
    });
};
