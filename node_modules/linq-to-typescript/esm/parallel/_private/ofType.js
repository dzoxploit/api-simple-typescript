import { BasicParallelEnumerable } from "../BasicParallelEnumerable.js";
import { nextIteration } from "./_nextIteration.js";
import { typeDataToArray } from "./_typeDataToArray.js";
export const ofType = (source, type) => {
    const typeCheck = typeof type === "string" ?
        (x) => [typeof x === type, x] :
        (x) => [x instanceof type, x];
    const generator = async () => {
        const dataFunc = nextIteration(source, typeCheck);
        const values = await typeDataToArray(dataFunc);
        const filteredValues = [];
        for (const [pass, value] of values) {
            if (pass) {
                filteredValues.push(value);
            }
        }
        return filteredValues;
    };
    return new BasicParallelEnumerable({
        generator,
        type: 0,
    });
};
