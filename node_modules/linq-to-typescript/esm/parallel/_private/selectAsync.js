import { BasicParallelEnumerable } from "../BasicParallelEnumerable.js";
import { nextIterationAsync } from "./_nextIterationAsync.js";
import { nextIterationWithIndexAsync } from "./_nextIterationWithIndexAsync.js";
export const selectAsync = (source, keyOrSelector) => {
    let generator;
    if (typeof keyOrSelector === "function") {
        if (keyOrSelector.length === 1) {
            generator = nextIterationAsync(source, keyOrSelector);
        }
        else {
            generator = nextIterationWithIndexAsync(source, keyOrSelector);
        }
    }
    else {
        generator = nextIterationAsync(source, (x) => (x[keyOrSelector]));
    }
    return new BasicParallelEnumerable(generator);
};
