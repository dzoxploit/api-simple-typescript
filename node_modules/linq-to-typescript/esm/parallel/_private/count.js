export const count = (source, predicate) => {
    if (predicate) {
        return count2(source, predicate);
    }
    else {
        return count1(source);
    }
};
const count1 = async (source) => {
    const dataFunc = source.dataFunc;
    switch (dataFunc.type) {
        case 0:
        case 2:
            const arrayData = await source.toArray();
            return arrayData.length;
        case 1:
            const promises = dataFunc.generator();
            return promises.length;
    }
};
const count2 = async (source, predicate) => {
    const values = await source.toArray();
    let totalCount = 0;
    for (let i = 0; i < values.length; i++) {
        if (predicate(values[i]) === true) {
            totalCount++;
        }
    }
    return totalCount;
};
