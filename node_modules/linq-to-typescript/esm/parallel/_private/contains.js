import { StrictEqualityComparer } from "../../shared/index.js";
import { nextIteration } from "./_nextIteration.js";
export const contains = async (source, value, comparer = StrictEqualityComparer) => {
    let values;
    if (comparer) {
        values = nextIteration(source, (x) => comparer(value, x));
    }
    else {
        values = nextIteration(source, (x) => x === value);
    }
    switch (values.type) {
        case 0: {
            const data = await values.generator();
            return data.some((x) => x);
        }
        case 1: {
            const data = await Promise.all(values.generator());
            return data.some((x) => x);
        }
        case 2: {
            const data = await Promise.all(await values.generator());
            return data.some((x) => x);
        }
    }
};
