import { BasicParallelEnumerable } from "../BasicParallelEnumerable.js";
export const intersectAsync = (first, second, comparer) => {
    const generator = async () => {
        const firstResults = await first.distinctAsync(comparer).toArray();
        if (firstResults.length === 0) {
            return [];
        }
        const secondResults = await second.toArray();
        const results = new Array();
        for (let i = 0; i < firstResults.length; i++) {
            const firstValue = firstResults[i];
            for (let j = 0; j < secondResults.length; j++) {
                const secondValue = secondResults[j];
                if (await comparer(firstValue, secondValue) === true) {
                    results.push(firstValue);
                    break;
                }
            }
        }
        return results;
    };
    return new BasicParallelEnumerable({
        generator,
        type: 0,
    });
};
