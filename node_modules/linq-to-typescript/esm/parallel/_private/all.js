import { nextIteration } from "./_nextIteration.js";
export const all = (source, predicate) => {
    const nextIter = nextIteration(source, (x) => {
        if (!predicate(x)) {
            throw new Error(String(false));
        }
        return true;
    });
    switch (nextIter.type) {
        case 0:
            return nextIter.generator()
                .then(() => true, () => false);
        case 1:
            return Promise.all(nextIter.generator())
                .then(() => true, () => false);
        case 2:
            return nextIter.generator()
                .then(Promise.all.bind(Promise))
                .then(() => true, () => false);
    }
};
