import { BasicParallelEnumerable } from "../BasicParallelEnumerable.js";
export const skip = (source, count) => {
    const dataFunc = source.dataFunc;
    switch (dataFunc.type) {
        case 0: {
            const generator = async () => (await dataFunc.generator()).slice(count);
            return new BasicParallelEnumerable({
                generator,
                type: 0,
            });
        }
        case 1: {
            const generator = () => dataFunc.generator().slice(count);
            return new BasicParallelEnumerable({
                generator,
                type: 1,
            });
        }
        case 2: {
            const generator = async () => {
                const dataInner = await dataFunc.generator();
                return dataInner.slice(count);
            };
            const dataFuncNew = {
                generator,
                type: 2,
            };
            return new BasicParallelEnumerable(dataFuncNew);
        }
    }
};
