"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.repeatParallel = void 0;
const shared_1 = require("../../shared");
const BasicParallelEnumerable_1 = require("../BasicParallelEnumerable");
const repeatParallel = (element, count, delay) => {
    if (count < 0) {
        throw new shared_1.ArgumentOutOfRangeException("count");
    }
    if (delay) {
        return repeat2(element, count, delay);
    }
    else {
        return repeat1(element, count);
    }
};
exports.repeatParallel = repeatParallel;
const repeat1 = (element, count) => {
    const generator = async () => {
        const values = new Array(count);
        for (let i = 0; i < count; i++) {
            values[i] = element;
        }
        return values;
    };
    return new BasicParallelEnumerable_1.BasicParallelEnumerable({
        generator,
        type: 0,
    });
};
const repeat2 = (element, count, delay) => {
    const generator = async () => {
        const values = new Array(count);
        for (let i = 0; i < count; i++) {
            values[i] = new Promise((resolve) => setTimeout(() => resolve(element), delay));
        }
        return values;
    };
    return new BasicParallelEnumerable_1.BasicParallelEnumerable({
        generator,
        type: 2,
    });
};
