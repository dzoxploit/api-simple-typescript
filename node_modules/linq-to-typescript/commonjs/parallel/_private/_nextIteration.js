"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.nextIteration = void 0;
const nextIteration = (source, onfulfilled) => {
    const dataFunc = source.dataFunc;
    switch (dataFunc.type) {
        case 0: {
            const generator = () => dataFunc.generator().then((x) => {
                const convValues = new Array(x.length);
                for (let i = 0; i < x.length; i++) {
                    convValues[i] = onfulfilled(x[i]);
                }
                return convValues;
            });
            return {
                generator,
                type: 0,
            };
        }
        case 1: {
            const generator = () => {
                const previousData = dataFunc.generator();
                const newPromises = new Array(previousData.length);
                for (let i = 0; i < previousData.length; i++) {
                    newPromises[i] = previousData[i].then(onfulfilled);
                }
                return newPromises;
            };
            return {
                generator,
                type: 1,
            };
        }
        case 2: {
            const generator = async () => {
                const previousData = await dataFunc.generator();
                const newPromises = new Array(previousData.length);
                for (let i = 0; i < previousData.length; i++) {
                    newPromises[i] = previousData[i].then(onfulfilled);
                }
                return newPromises;
            };
            return {
                generator,
                type: 2,
            };
        }
    }
};
exports.nextIteration = nextIteration;
