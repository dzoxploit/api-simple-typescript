"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.first = void 0;
const shared_1 = require("../../shared");
const toArray_1 = require("./toArray");
const first = (source, predicate) => {
    if (predicate) {
        return first2(source, predicate);
    }
    else {
        return first1(source);
    }
};
exports.first = first;
const first1 = async (source) => {
    const dataFunc = source.dataFunc;
    switch (dataFunc.type) {
        case 0: {
            const values = await dataFunc.generator();
            if (values.length === 0) {
                throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);
            }
            else {
                return values[0];
            }
        }
        case 1: {
            const promises = dataFunc.generator();
            if (promises.length === 0) {
                throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);
            }
            else {
                return await promises[0];
            }
        }
        case 2: {
            const promises = await dataFunc.generator();
            if (promises.length === 0) {
                throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);
            }
            else {
                return await promises[0];
            }
        }
    }
};
const first2 = async (source, predicate) => {
    const data = await (0, toArray_1.toArray)(source);
    for (const value of data) {
        if (predicate(value) === true) {
            return value;
        }
    }
    throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);
};
