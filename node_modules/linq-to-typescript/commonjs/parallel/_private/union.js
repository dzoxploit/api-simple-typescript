"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.union = void 0;
const BasicParallelEnumerable_1 = require("../BasicParallelEnumerable");
const union = (first, second, comparer) => {
    if (comparer) {
        return union2(first, second, comparer);
    }
    else {
        return union1(first, second);
    }
};
exports.union = union;
const union1 = (first, second) => {
    const generator = async () => {
        const set = new Set();
        const secondPromise = second.toArray();
        for await (const item of first) {
            if (set.has(item) === false) {
                set.add(item);
            }
        }
        const secondValues = await secondPromise;
        for (const item of secondValues) {
            if (set.has(item) === false) {
                set.add(item);
            }
        }
        return [...set.keys()];
    };
    return new BasicParallelEnumerable_1.BasicParallelEnumerable({
        generator,
        type: 0,
    });
};
const union2 = (first, second, comparer) => {
    const generator = async () => {
        const result = [];
        const values = await Promise.all([first.toArray(), second.toArray()]);
        for (const source of values) {
            for (const value of source) {
                let exists = false;
                for (const resultValue of result) {
                    if (comparer(value, resultValue) === true) {
                        exists = true;
                        break;
                    }
                }
                if (exists === false) {
                    result.push(value);
                }
            }
        }
        return result;
    };
    return new BasicParallelEnumerable_1.BasicParallelEnumerable({
        generator,
        type: 0,
    });
};
