"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.contains = void 0;
const shared_1 = require("../../shared");
const _nextIteration_1 = require("./_nextIteration");
const contains = async (source, value, comparer = shared_1.StrictEqualityComparer) => {
    let values;
    if (comparer) {
        values = (0, _nextIteration_1.nextIteration)(source, (x) => comparer(value, x));
    }
    else {
        values = (0, _nextIteration_1.nextIteration)(source, (x) => x === value);
    }
    switch (values.type) {
        case 0: {
            const data = await values.generator();
            return data.some((x) => x);
        }
        case 1: {
            const data = await Promise.all(values.generator());
            return data.some((x) => x);
        }
        case 2: {
            const data = await Promise.all(await values.generator());
            return data.some((x) => x);
        }
    }
};
exports.contains = contains;
