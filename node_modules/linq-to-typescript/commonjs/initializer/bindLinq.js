"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bindLinq = void 0;
const aggregate_1 = require("./../sync/_private/aggregate");
const all_1 = require("./../sync/_private/all");
const allAsync_1 = require("./../sync/_private/allAsync");
const any_1 = require("./../sync/_private/any");
const anyAsync_1 = require("./../sync/_private/anyAsync");
const asAsync_1 = require("./../sync/_private/asAsync");
const asParallel_1 = require("./../sync/_private/asParallel");
const average_1 = require("./../sync/_private/average");
const averageAsync_1 = require("./../sync/_private/averageAsync");
const chunk_1 = require("./../sync/_private/chunk");
const concatenate_1 = require("../sync/_private/concatenate");
const contains_1 = require("./../sync/_private/contains");
const containsAsync_1 = require("./../sync/_private/containsAsync");
const count_1 = require("./../sync/_private/count");
const countAsync_1 = require("./../sync/_private/countAsync");
const defaultIfEmpty_1 = require("../sync/_private/defaultIfEmpty");
const distinct_1 = require("./../sync/_private/distinct");
const distinctAsync_1 = require("./../sync/_private/distinctAsync");
const each_1 = require("./../sync/_private/each");
const eachAsync_1 = require("./../sync/_private/eachAsync");
const elementAt_1 = require("./../sync/_private/elementAt");
const elementAtOrDefault_1 = require("./../sync/_private/elementAtOrDefault");
const except_1 = require("./../sync/_private/except");
const exceptAsync_1 = require("./../sync/_private/exceptAsync");
const first_1 = require("./../sync/_private/first");
const firstAsync_1 = require("./../sync/_private/firstAsync");
const firstOrDefault_1 = require("./../sync/_private/firstOrDefault");
const firstOrDefaultAsync_1 = require("./../sync/_private/firstOrDefaultAsync");
const groupBy_1 = require("./../sync/_private/groupBy");
const groupByAsync_1 = require("./../sync/_private/groupByAsync");
const groupByWithSel_1 = require("./../sync/_private/groupByWithSel");
const groupJoin_1 = require("../sync/_private/groupJoin");
const groupJoinAsync_1 = require("../sync/_private/groupJoinAsync");
const intersect_1 = require("./../sync/_private/intersect");
const intersectAsync_1 = require("./../sync/_private/intersectAsync");
const join_1 = require("./../sync/_private/join");
const last_1 = require("./../sync/_private/last");
const lastAsync_1 = require("./../sync/_private/lastAsync");
const lastOrDefault_1 = require("./../sync/_private/lastOrDefault");
const lastOrDefaultAsync_1 = require("./../sync/_private/lastOrDefaultAsync");
const max_1 = require("./../sync/_private/max");
const maxAsync_1 = require("./../sync/_private/maxAsync");
const min_1 = require("./../sync/_private/min");
const minAsync_1 = require("./../sync/_private/minAsync");
const ofType_1 = require("./../sync/_private/ofType");
const orderBy_1 = require("./../sync/_private/orderBy");
const orderByAsync_1 = require("./../sync/_private/orderByAsync");
const orderByDescending_1 = require("./../sync/_private/orderByDescending");
const orderByDescendingAsync_1 = require("./../sync/_private/orderByDescendingAsync");
const partition_1 = require("./../sync/_private/partition");
const partitionAsync_1 = require("./../sync/_private/partitionAsync");
const reverse_1 = require("./../sync/_private/reverse");
const select_1 = require("./../sync/_private/select");
const selectAsync_1 = require("./../sync/_private/selectAsync");
const selectMany_1 = require("./../sync/_private/selectMany");
const selectManyAsync_1 = require("./../sync/_private/selectManyAsync");
const sequenceEquals_1 = require("./../sync/_private/sequenceEquals");
const sequenceEqualsAsync_1 = require("./../sync/_private/sequenceEqualsAsync");
const single_1 = require("./../sync/_private/single");
const singleAsync_1 = require("./../sync/_private/singleAsync");
const singleOrDefault_1 = require("./../sync/_private/singleOrDefault");
const singleOrDefaultAsync_1 = require("./../sync/_private/singleOrDefaultAsync");
const skip_1 = require("./../sync/_private/skip");
const skipWhile_1 = require("./../sync/_private/skipWhile");
const skipWhileAsync_1 = require("./../sync/_private/skipWhileAsync");
const sum_1 = require("./../sync/_private/sum");
const sumAsync_1 = require("./../sync/_private/sumAsync");
const take_1 = require("./../sync/_private/take");
const takeWhile_1 = require("./../sync/_private/takeWhile");
const takeWhileAsync_1 = require("./../sync/_private/takeWhileAsync");
const toArray_1 = require("./../sync/_private/toArray");
const toMap_1 = require("./../sync/_private/toMap");
const toMapAsync_1 = require("./../sync/_private/toMapAsync");
const toObject_1 = require("./../sync/_private/toObject");
const toObjectAsync_1 = require("./../sync/_private/toObjectAsync");
const toSet_1 = require("./../sync/_private/toSet");
const union_1 = require("./../sync/_private/union");
const unionAsync_1 = require("./../sync/_private/unionAsync");
const where_1 = require("./../sync/_private/where");
const whereAsync_1 = require("./../sync/_private/whereAsync");
const zip_1 = require("./../sync/_private/zip");
const zipAsync_1 = require("./../sync/_private/zipAsync");
const bindLinq = (object) => {
    const prototype = object.prototype;
    const bind = (func, key) => {
        const wrapped = function (...params) {
            return func(this, ...params);
        };
        Object.defineProperty(wrapped, "length", { value: func.length - 1 });
        prototype[key] = wrapped;
    };
    bind(aggregate_1.aggregate, "aggregate");
    bind(all_1.all, "all");
    bind(allAsync_1.allAsync, "allAsync");
    bind(any_1.any, "any");
    bind(anyAsync_1.anyAsync, "anyAsync");
    bind(asAsync_1.asAsync, "asAsync");
    bind(asParallel_1.asParallel, "asParallel");
    bind(average_1.average, "average");
    bind(averageAsync_1.averageAsync, "averageAsync");
    bind(chunk_1.chunk, "chunk");
    bind(concatenate_1.concatenate, "concatenate");
    bind(contains_1.contains, "contains");
    bind(containsAsync_1.containsAsync, "containsAsync");
    bind(count_1.count, "count");
    bind(countAsync_1.countAsync, "countAsync");
    bind(defaultIfEmpty_1.defaultIfEmpty, "defaultIfEmpty");
    bind(distinct_1.distinct, "distinct");
    bind(distinctAsync_1.distinctAsync, "distinctAsync");
    bind(each_1.each, "each");
    bind(eachAsync_1.eachAsync, "eachAsync");
    bind(elementAt_1.elementAt, "elementAt");
    bind(elementAtOrDefault_1.elementAtOrDefault, "elementAtOrDefault");
    bind(except_1.except, "except");
    bind(exceptAsync_1.exceptAsync, "exceptAsync");
    bind(first_1.first, "first");
    bind(firstAsync_1.firstAsync, "firstAsync");
    bind(firstOrDefault_1.firstOrDefault, "firstOrDefault");
    bind(firstOrDefaultAsync_1.firstOrDefaultAsync, "firstOrDefaultAsync");
    bind(groupBy_1.groupBy, "groupBy");
    bind(groupByAsync_1.groupByAsync, "groupByAsync");
    bind(groupByWithSel_1.groupByWithSel, "groupByWithSel");
    bind(groupJoin_1.groupJoin, "groupJoin");
    bind(groupJoinAsync_1.groupJoinAsync, "groupJoinAsync");
    bind(intersect_1.intersect, "intersect");
    bind(intersectAsync_1.intersectAsync, "intersectAsync");
    bind(join_1.join, "joinByKey");
    bind(last_1.last, "last");
    bind(lastAsync_1.lastAsync, "lastAsync");
    bind(lastOrDefault_1.lastOrDefault, "lastOrDefault");
    bind(lastOrDefaultAsync_1.lastOrDefaultAsync, "lastOrDefaultAsync");
    bind(max_1.max, "max");
    bind(maxAsync_1.maxAsync, "maxAsync");
    bind(min_1.min, "min");
    bind(minAsync_1.minAsync, "minAsync");
    bind(ofType_1.ofType, "ofType");
    bind(orderBy_1.orderBy, "orderBy");
    bind(orderByAsync_1.orderByAsync, "orderByAsync");
    bind(orderByDescending_1.orderByDescending, "orderByDescending");
    bind(orderByDescendingAsync_1.orderByDescendingAsync, "orderByDescendingAsync");
    bind(reverse_1.reverse, "reverse");
    bind(select_1.select, "select");
    bind(selectAsync_1.selectAsync, "selectAsync");
    bind(selectMany_1.selectMany, "selectMany");
    bind(selectManyAsync_1.selectManyAsync, "selectManyAsync");
    bind(sequenceEquals_1.sequenceEquals, "sequenceEquals");
    bind(sequenceEqualsAsync_1.sequenceEqualsAsync, "sequenceEqualsAsync");
    bind(single_1.single, "single");
    bind(singleAsync_1.singleAsync, "singleAsync");
    bind(singleOrDefault_1.singleOrDefault, "singleOrDefault");
    bind(singleOrDefaultAsync_1.singleOrDefaultAsync, "singleOrDefaultAsync");
    bind(skip_1.skip, "skip");
    bind(skipWhile_1.skipWhile, "skipWhile");
    bind(skipWhileAsync_1.skipWhileAsync, "skipWhileAsync");
    bind(sum_1.sum, "sum");
    bind(sumAsync_1.sumAsync, "sumAsync");
    bind(take_1.take, "take");
    bind(takeWhile_1.takeWhile, "takeWhile");
    bind(takeWhileAsync_1.takeWhileAsync, "takeWhileAsync");
    bind(toArray_1.toArray, "toArray");
    bind(toMap_1.toMap, "toMap");
    bind(toMapAsync_1.toMapAsync, "toMapAsync");
    bind(toObject_1.toObject, "toObject");
    bind(toObjectAsync_1.toObjectAsync, "toObjectAsync");
    bind(partition_1.partition, "partition");
    bind(partitionAsync_1.partitionAsync, "partitionAsync");
    bind(toSet_1.toSet, "toSet");
    bind(union_1.union, "union");
    bind(unionAsync_1.unionAsync, "unionAsync");
    bind(where_1.where, "where");
    bind(whereAsync_1.whereAsync, "whereAsync");
    bind(zip_1.zip, "zip");
    bind(zipAsync_1.zipAsync, "zipAsync");
};
exports.bindLinq = bindLinq;
