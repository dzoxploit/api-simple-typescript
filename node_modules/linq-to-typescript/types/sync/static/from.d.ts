import { IEnumerable, IterableType } from "../../types";
declare type FromFunc = {
    /**
     * Creates an IEnumerable<TSource> from an array
     * @param source Array of Elements
     * @returns IEnumerable<TSource>
     */
    <TSource>(source: ArrayLike<TSource>): IEnumerable<TSource>;
    /**
     * Creates an IEnumerable<TSource> from an IterableIterator<TSource> of elements
     * @param source Iteration of Elements
     * @returns IEnumerable<TSource>
     */
    <TSource>(source: IterableIterator<TSource>): IEnumerable<TSource>;
    /**
     * Creates an IEnumerable<TSource> from an iterable type
     * @param source Iterable Type
     * @returns IEnumerable<TSource>
     */
    <TSource>(source: IterableType<TSource>): IEnumerable<TSource>;
    /**
     * Creates an IEnumerable<TSource> from a generator function
     * @param source Generator
     * @returns IEnumerable<TSource>
     */
    <TSource>(source: () => Generator<TSource>): IEnumerable<TSource>;
};
export declare const from: FromFunc;
export {};
