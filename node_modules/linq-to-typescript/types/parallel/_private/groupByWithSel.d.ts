import { IAsyncParallel, IEqualityComparer, IGrouping, IParallelEnumerable, SelectorKeyType } from "../../types";
declare type GroupByWithSelFunc = {
    <TSource, TKey extends SelectorKeyType, TElement>(source: IAsyncParallel<TSource>, keySelector: ((x: TSource) => TKey), elementSelector: (x: TSource) => TElement): IParallelEnumerable<IGrouping<TKey, TElement>>;
    <TSource, TKey, TElement>(source: IAsyncParallel<TSource>, keySelector: ((x: TSource) => TKey), elementSelector: (x: TSource) => TElement, comparer: IEqualityComparer<TKey>): IParallelEnumerable<IGrouping<TKey, TElement>>;
};
export declare const groupByWithSel: GroupByWithSelFunc;
export {};
